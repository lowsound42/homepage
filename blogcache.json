[{"type_of":"article","id":899229,"title":"Let there be light","description":"(Video of the thing at the bottom but the story adds great context without which you'd wonder why the...","published":true,"published_at":"2021-11-15T22:44:30.712Z","slug":"let-there-be-light-nmi","path":"/pxplowsound/let-there-be-light-nmi","url":"https://dev.to/pxplowsound/let-there-be-light-nmi","comments_count":0,"public_reactions_count":1,"page_views_count":10,"published_timestamp":"2021-11-15T22:44:30Z","body_markdown":"(Video of the thing at the bottom but the story adds great context without which you'd wonder why the hell I'd want to do something like this)\n\nI live in Canada, my parents live in the U.A.E, and my grandma lives in India. We speak on Zoom once a week but it's a cheap substitute for real interaction. With this project I wanted to experiment with something in the IoT space that might allow them to interact with my physical space, if even just through some sort of electronic proxy.\n\nCurrently I have one Philips Hue bulb in the living room (where my desk is). Using the stock app by Philips I can manipulate it's state (on or off), colour, intensity, and even set up routines or alarms based on custom rules. I wanted to give them access to make changes to that bulbs' state. This wouldn't just be as easy as having them download the app and then connecting to my bulb because the light is connected to my home wifi via a bridge and isn't exposed to the external world (for so many good reasons!). My solution was to create a web portal that made POST requests to a custom node + express backend server that I had running. The server would redirect their requests to the Hue bulb. Hue has a pretty cool and easy to work with API that allows you to make GET requests to see the state of your bulb and PUT requests to change/alter the state as required. There were two issues here I wanted to solve for though.\n\na) The server had to be running 24/7. Due to the time difference, the request could potentially come in at any time and I needed to be listening for it. I tried putting it up on Heroku, but I'd have to get a paid dyno because when the server went to sleep, the requests would fail and the whole thing would fall apart.\n\nb) The request still had to hit my lights on my home wifi somehow, and a dynamic IP address (the kind that changes every so often thanks to your ISP's) would be a problem.\n\nI solved both by putting my server on a Raspberry Pi. I assigned it a static IP so that things would stay constant internally and the requests would get sent to the right place. The Pi then had to be exposed to the world. So I set up port-forwarding and started looking for solutions to the dynamic IP address issue. [Here's](https://www.noip.com/) what I ended up going with. They essentially solve this problem for me.\n\nSo now, my server is constantly running, even when my computer is off (plus it's free!).\n\nFor the web portal, I created a simple page that had three buttons. One that symbolized \"let's talk!\" that changed my light to green, one that said \"I'm eating!\" that turned my light red, and one that turned my light blue that meant \"good night\". My family or friends can now use this to send a simple message to indicate really simple emotions to me in a way that seems more real simply because it's changing my physical reality in a way that a video call just doesn't.\n\n[![Everything Is AWESOME](https://img.youtube.com/vi/N49iwiBaZbQ/0.jpg)](https://www.youtube.com/watch?v=N49iwiBaZbQ \"Let there be light!\")\n","positive_reactions_count":1,"cover_image":null,"tag_list":["portfolio"],"canonical_url":"https://dev.to/pxplowsound/let-there-be-light-nmi","reading_time_minutes":3,"user":{"name":"Omar Khan","username":"pxplowsound","twitter_username":"pxplowsound","github_username":"lowsound42","website_url":null,"profile_image":"https://res.cloudinary.com/practicaldev/image/fetch/s--9hR3_Gv6--/c_fill,f_auto,fl_progressive,h_640,q_auto,w_640/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/748113/3824c26c-d96f-4528-b618-fc4583189b49.png","profile_image_90":"https://res.cloudinary.com/practicaldev/image/fetch/s--htFR29r2--/c_fill,f_auto,fl_progressive,h_90,q_auto,w_90/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/748113/3824c26c-d96f-4528-b618-fc4583189b49.png"}},{"type_of":"article","id":899054,"title":"Something Something as a Service","description":"Something Something as a Service (and how it helped me do something dumb).   I am fascinated...","published":true,"published_at":"2021-11-15T18:20:57.317Z","slug":"something-something-as-a-service-8ch","path":"/pxplowsound/something-something-as-a-service-8ch","url":"https://dev.to/pxplowsound/something-something-as-a-service-8ch","comments_count":0,"public_reactions_count":4,"page_views_count":8,"published_timestamp":"2021-11-15T18:20:57Z","body_markdown":"# Something Something as a Service (and how it helped me do something dumb).\n\nI am fascinated by the plethora of 'as a Service' services out there. Software as a Service, Analytics as a Service, Backend as a Service, Infrastructure as a Service, Transportation as a Service (LOL), and literally thousands of other made up terms to describe things that already maybe had a name. (Transportation as a Service == Taxis? Buses?). I didn't fully understand why the 'as a Service' paradigm was necessary until I found one that truly spoke to me. \n\nBehold, [Fuck Off as a Service](https://www.foaas.com) (FOaaS). This is a REST API that [this guy](https://twitter.com/TomDionysus) created to solve the very common problem of 'telling people to fuck off'. I understand the problem space so let's explore what this service can do for people like us.\n\n## Detour: What's an API?\n\nLet's say I'm at home and I want a sandwich. I open up my fridge and find all the things that'll combine to create my masterpiece sandwich. I then put them together myself and voila, I have made a sandwich.\n\nNow alternatively, I could buy a sandwich from a fast food restaurant. They don't want me touching their stuff so they'll make it for me. Also, they'll do it the way they do it; there's a system. All I have to do is order the sandwich. Oh and I'll have to order it off of their menu. Yes, there are certain exceptions that can be made (no pickles or whatever), and to be honest, this analogy could probably handle that stuff too but let's just keep it simple for now. No deviations from the menu.\n\nThe menu then, is the API. I don't really need to know where they put their bread, mayo, mustard, cheese, and all the other ingredients. I'm not the one that needs to go find them and put them together. All I need is the API (I mean...menu) so that I can say \"gimme a number 6\" and magically after a bit of a wait, my desired result appears.\n\nIn software, an API is what you use to interact with someone elses' software solutions. They promise a certain set of results and provide you with the 'menu' that you need to order off of to get those results. Ask for things in a specific way, and your desired outcome ensues.\n\n## Back on track: What's the deal with FOaaS?\n\nFOaaS is a pretty simple API. It has a list of 'endpoints' that you can hit to get specific, predictable responses. All of these responses are variations of telling people to fuck off. You can test it in your browser. An endpoint is essentially just a URL that you can go to where your 'sandwich' will be waiting for you. Try it out now. Go to [https://www.foaas.com/me/enter-your-name-here](https://www.foaas.com/me/enter-your-name-here). There's behind the scenes code that inserts your name in the predetermined phrase and then displays it for you. You don't need to know how it's doing what it's doing, just that you can go to that endpoint and you will always get that result.\n\n[https://www.foaas.com/zero/Omar](https://www.foaas.com/zero/Omar)\n\n[https://www.foaas.com/maybe/Omar](https://www.foaas.com/maybe/Omar)\n\n[https://www.foaas.com/cool/Omar](https://www.foaas.com/cool/Omar)\n\nTry all of those (and sub your name for mine). \n\nSo yes, it's pretty basic but it works and there are tons of endpoints to pick from.\n\n## What I did with FOaaS.\n\nSo I used FOaaS and made something. It's not crazy but it was fun and it's fun to play with. Let me show you. First I have to tell you a bit about the Terminal.\n\nThis is the terminal:\n\n![Image description](https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4rdjovsvwhv5a7ynuivn.png)\n\nSimply put, it's an application that lets you interact with your Operating System to do...stuff. You can do all kinds of things in the terminal. When it comes to programming, it's sometimes easier and more efficient to operate within the terminal for certain tasks than use some sort of GUI so you'll often see this window open when someone's coding something.\n\nThe terminal is particularly useful when it comes to automating repetitive tasks. For example, deleting all files in a folder that end with the '.png' extension. In a very large folder that could be super tedious to do manually, but the terminal lets you do it in one line by simply typing in the following: \n\n`rm /some/dir/*.png`\n\nThings like that are why it's fun to play around with (but can also make it dangerous!).\n\nThere are also some useful little commands you can call on for information. For example, if you type in `date`, you get the current time and date. Nice and simple.\n\n![Image description](https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pup8c891lfvt0r1sbkh1.gif)\n\nSimilarly, you can display a calendar by typing `cal` for the current month and `cal 2020` for all of 2020.\n\n![Image description](https://dev-to-uploads.s3.amazonaws.com/uploads/articles/miuo35v0034swc0eiauq.gif)\n\n\nSo that's the terminal and those are some very very basic commands that come with it.\n\n## Finally, the thing!\n\nWhat I wanted to do was build a new, built-in command that would work by calling the FOaaS API and would provide some sort of response within the terminal. Essentially it's a key phrase, like `date` and like `cal` that the user will call on. Additionally, in the same way the user adds 2020 to cal (i.e. `cal 2020`) to alter its behavior, the user will be able to enter parameters to hit different endpoints of the FOaaS API. So let me just show it to you in action:\n\n![Image description](https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ithjxrvr4puiwt2n3zd1.gif)\n\nAnd there it is 😂\n\nIt's totally stupid, pretty much useless, but good for a laugh, and fun to waste time with so I consider this a huge win. You can essentially hit any of those FOaaS API endpoints and the tool will return the correct response. What this is, is an 'API Wrapper' built in Node.js. \n\nIf you know how to do it, feel free to check out the source code here: [https://github.com/lowsound42/foaas-cli](https://github.com/lowsound42/foaas-cli) and also, feel free to download it globally via the NPM package here: [https://www.npmjs.com/package/foaas-cli](https://www.npmjs.com/package/foaas-cli) \n\nWhenever you're killing time between commands in the terminal, `foaas-cli` will be around to provide a quick laugh.","positive_reactions_count":4,"cover_image":null,"tag_list":["portfolio"],"canonical_url":"https://dev.to/pxplowsound/something-something-as-a-service-8ch","reading_time_minutes":5,"user":{"name":"Omar Khan","username":"pxplowsound","twitter_username":"pxplowsound","github_username":"lowsound42","website_url":null,"profile_image":"https://res.cloudinary.com/practicaldev/image/fetch/s--9hR3_Gv6--/c_fill,f_auto,fl_progressive,h_640,q_auto,w_640/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/748113/3824c26c-d96f-4528-b618-fc4583189b49.png","profile_image_90":"https://res.cloudinary.com/practicaldev/image/fetch/s--htFR29r2--/c_fill,f_auto,fl_progressive,h_90,q_auto,w_90/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/748113/3824c26c-d96f-4528-b618-fc4583189b49.png"}},{"type_of":"article","id":898855,"title":"Hello, World!","description":"I thought I'd inaugurate this empty blog with the cliché-est cliché that ever clichéd in the world of...","published":true,"published_at":"2021-11-15T16:16:02.199Z","slug":"awdadwadw-5fpa","path":"/pxplowsound/awdadwadw-5fpa","url":"https://dev.to/pxplowsound/awdadwadw-5fpa","comments_count":0,"public_reactions_count":1,"page_views_count":14,"published_timestamp":"2021-11-15T16:16:02Z","body_markdown":"I thought I'd inaugurate this empty blog with the cliché-est cliché that ever clichéd in the world of programming. Mostly I'm just doing this so that you're not faced with an empty wall; but also there's a little bit of the sticking-to-tradition thing going on here.\n\nI'm still working on the look and feel of this website but I'm hoping to start writing down thoughts and ideas here as I work on all that. \n\nWelcome.","positive_reactions_count":1,"cover_image":null,"tag_list":["blog"],"canonical_url":"https://dev.to/pxplowsound/awdadwadw-5fpa","reading_time_minutes":1,"user":{"name":"Omar Khan","username":"pxplowsound","twitter_username":"pxplowsound","github_username":"lowsound42","website_url":null,"profile_image":"https://res.cloudinary.com/practicaldev/image/fetch/s--9hR3_Gv6--/c_fill,f_auto,fl_progressive,h_640,q_auto,w_640/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/748113/3824c26c-d96f-4528-b618-fc4583189b49.png","profile_image_90":"https://res.cloudinary.com/practicaldev/image/fetch/s--htFR29r2--/c_fill,f_auto,fl_progressive,h_90,q_auto,w_90/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/748113/3824c26c-d96f-4528-b618-fc4583189b49.png"}}]